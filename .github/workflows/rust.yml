name: Rust

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

env:
  CARGO_TERM_COLOR: always

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: Provision build environment
      run: |
        rustup update nightly
        rustup component add rust-src --toolchain nightly
        # Install cargo-psx
        pushd cargo-psx
        cargo install --path .
        popd
        # Install the emulator, BFD linker and xvfb
        sudo apt-get install -y       \
            binutils-mipsel-linux-gnu \
            mednafen                  \
            xvfb
    - name: Build the BIOS
      run: |
        # Build the BIOS and configure the emulator to use it
        pushd examples/bios
        cargo psx build --link bios.ld
        mkdir -p ~/.mednafen/firmware
        cp target/mipsel-sony-psx/release/bios.exe \
            ~/.mednafen/firmware/scph7001.bin
        popd
    - name: Run psx crate tests
      run: |
        pushd psx
        # TODO: Simplify this. runner=echo is a dumb way to get the test exe.
        # Ideally I'd just run cargo psx test with xvfb-run
        TEST_EXE=$(CARGO_TARGET_MIPSEL_SONY_PSX_RUNNER=echo cargo psx test)
        xvfb-run mednafen -psx.dbg_level 2 -psx.bios_jp scph7001.bin $TEST_EXE
            | tee bios_stdout &
        sleep 15
        grep "test result: ok. [0-9]* passed; 0 failed" bios_stdout
